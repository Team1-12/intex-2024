<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Turtle Volunteer Records</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Font Awesome icons (free version)-->
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <!-- Google fonts-->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
    <link href="https://fonts.googleapis.com/css?family=Roboto+Slab:400,100,300,700" rel="stylesheet" type="text/css" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="css/styles.css" rel="stylesheet" />
    <style>
        .table-responsive {
            margin-top: 20px;
            max-height: 500px;
            overflow-y: auto;
            
        }
        .thead-dark th {
            position: sticky;
            top: 0;
            z-index: 1;
            background-color: #303030;
            color: white;
        }
        .dropdown-menu {
            right: 0;
            left: auto;
        }
        .mt-4 {
            max-width: fit-content;
            text-align: left;
            padding-left: 40px;
        }
        .add-event-btn {
            padding-top: 20px;
        }

    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top" id="mainNav" style="background-color: #303030;">
        <div class="container-fluid p-0">
            <a class="navbar-brand" href="/internalLanding"><img src="../assets/TSlogoLowRes.png" alt="..." />Turtle Shelter Project -- Admin</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                Menu
                <i class="fas fa-bars ms-1"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav text-uppercase ms-auto py-4 py-lg-0">
                    <li class="nav-item"><a class="nav-link" href="/internalLanding"><i class="fas fa-tools"></i> Admin Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/eventRecords"><i class="fas fa-calendar-alt"></i> Events</a></li>
                    <li class="nav-item"><a class="nav-link" href="/volunteerRecords"><i class="fas fa-users"></i> Volunteers</a></li>
                    <li class="nav-item"><a class="nav-link" href="/adminRecords"><i class="fas fa-user-cog"></i> Admins</a></li>
                    <li class="nav-item dropdown">
                        <a 
                            class="nav-link dropdown-toggle logout-btn" 
                            href="#" 
                            id="navbarDropdown" 
                            role="button" 
                            data-toggle="dropdown" 
                            aria-haspopup="true" 
                            aria-expanded="false"
                        >
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="/logout">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                            <a class="dropdown-item" href="/">
                                <i class="fas fa-home"></i> Return Home
                            </a>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <main style="padding-top: 100px;"></main>
    <div class="container mt-5" style="width: 98vw;">
        <h2>Volunteer Records</h2>
        <div class="table-responsive" style="width: 100%;">
            <table class="table table-striped table-bordered" style="width: 100%;">
                <thead class="thead-dark">
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th style="width: 300px;">Phone</th>
                        <th>Email</th>
                        <th>City</th>
                        <th>State</th>
                        <th>How Heard</th>
                        <th>Sewing Level</th>
                        <th>Monthly Hours</th>
                        <th>Lead Event?</th>
                        <th>Travel Time</th>
                        <th>Comments</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (volunteer && volunteer.length > 0) { %>
                        <% volunteer.forEach(function(row) { %>
                            <tr>
                                <td><%= row.firstname %></td>
                                <td><%= row.lastname %></td>
                                <td><%= row.phone %></td>
                                <td>
                                    <a href="#" 
                                       class="email-link" 
                                       data-toggle="modal" 
                                       data-target="#emailModal" 
                                       data-email="<%= row.email %>"
                                       data-name="<%= row.firstname + ' ' + row.lastname %>">
                                        <%= row.email %>
                                    </a>
                                </td>
                                <td><%= row.city %></td>
                                <td><%= row.state %></td>
                                <td><%= row.howtheyheard %></td>
                                <td><%= row.sewinglevel %></td>
                                <td><%= row.monthlyhrswilling %></td>
                                <td><%= row.leadevent ? 'Yes' : 'No' %></td>
                                <td><%= row.traveltime %></td>
                                <td><%= row.comments || 'N/A' %></td>
                                <td>
                                    <div>
                                        <form action="/deleteVolunteer/<%= row.volunteerid %>" method="POST" style="display:inline;">
                                            <button type="submit" onclick="return confirm('Are you sure you want to delete this record?');" class="btn btn-danger btn-sm">Delete</button>
                                        </form>
                                    </div>
                                    <div style="padding-top: 5px;">
                                        <button class="btn btn-primary btn-sm btn-block edit-btn" data-id="<%= row.volunteerid %>">Edit</button>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="13" class="text-center">No volunteer records available.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        <div class="add-event-btn text-center">
            <form action="/volunteerForm" method="GET">
              <button type="submit" class="btn btn-success" style="background-color: #759145;">Add Volunteer</button>
            </form>
          </div>
    </div>

    <!-- Email Modal -->
    <div class="modal fade" id="emailModal" tabindex="-1" aria-labelledby="emailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="emailModalLabel">Send Email</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="emailForm">
                        <div class="form-group">
                            <label for="recipientEmail">To</label>
                            <input type="text" class="form-control" id="recipientEmail" readonly>
                        </div>
                        <div class="form-group mt-3">
                            <label for="emailSubject">Subject</label>
                            <input type="text" class="form-control" id="emailSubject" placeholder="Enter email subject" required>
                        </div>
                        <div class="form-group mt-3">
                            <label for="emailMessage">Message</label>
                            <textarea class="form-control" id="emailMessage" rows="5" placeholder="Enter your message" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="sendEmailButton">Send</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function () {
        // Delegated event binding for both Edit and Save buttons
        $(document).on('click', '.edit-btn, .save-btn', function () {
            var button = $(this); // The clicked button
            var row = button.closest('tr'); // The table row containing the button
            var volunteerid = button.data('id'); // The volunteer ID from data-id attribute
    
            // **Edit Button Clicked**
            if (button.hasClass('edit-btn')) {
                console.log('Edit button clicked for volunteer ID:', volunteerid);
    
                // Prevent multiple edits on the same row
                if (row.hasClass('editing')) {
                    console.warn('Row is already in edit mode.');
                    return;
                }
                row.addClass('editing'); // Mark the row as being edited
    
                // Convert each cell to an input field, excluding the last cell (action buttons)
                row.find('td').not(':last').each(function (index) {
                    var cell = $(this);
                    var text;
    
                    // If the cell contains a link (e.g., Email), extract the email
                    if (cell.find('a').length > 0) {
                        text = cell.find('a').data('email') || cell.find('a').text().trim();
                    } else {
                        text = cell.text().trim();
                    }
    
                    // Create and append the input element
                    var input = $('<input>', {
                        type: 'text',
                        class: 'form-control',
                        value: text
                    });
                    cell.empty().append(input);
                });
    
                // Change the Edit button to Save
                button.text('Save').removeClass('edit-btn btn-primary').addClass('save-btn btn-success');
            }
    
            // **Save Button Clicked**
            else if (button.hasClass('save-btn')) {
                console.log('Save button clicked for volunteer ID:', volunteerid);
    
                // Gather all input values from the row
                var inputs = row.find('input');
                var data = {
                    FirstName: inputs.eq(0).val(),
                    LastName: inputs.eq(1).val(),
                    Phone: inputs.eq(2).val(),
                    Email: inputs.eq(3).val(),
                    City: inputs.eq(4).val(),
                    state: inputs.eq(5).val(),
                    HowTheyHeard: inputs.eq(6).val(),
                    SewingLevel: inputs.eq(7).val(),
                    MonthlyHrsWilling: inputs.eq(8).val(),
                    LeadWilling: inputs.eq(9).val(),
                    TravelTime: inputs.eq(10).val(),
                    Comments: inputs.eq(11).val(),
                };
    
                console.log('Data to save:', data);
    
                // Perform AJAX request to save data
                $.ajax({
                    url: '/saveVolunteer/' + volunteerid,
                    method: 'POST',
                    contentType: 'application/json', // Ensure your server expects JSON
                    data: JSON.stringify(data),
                    success: function (response) {
                        console.log('Save successful for volunteer ID:', volunteerid);
                        alert('Volunteer record updated successfully!');
    
                        // Convert inputs back to plain text or links
                        row.find('td').not(':last').each(function (index) {
                            var cell = $(this);
                            var value = inputs.eq(index).val();
    
                            if (index === 3) { // Email column (assuming 0-based index)
                                cell.html(
                                    $('<a>', {
                                        href: '#',
                                        class: 'email-link',
                                        'data-toggle': 'modal',
                                        'data-target': '#emailModal',
                                        'data-email': value,
                                        'data-name': data.FirstName + ' ' + data.LastName,
                                        text: value
                                    })
                                );
                            } else {
                                cell.text(value); // Replace input with plain text
                            }
                        });
    
                        // Change the Save button back to Edit
                        button.text('Edit').removeClass('save-btn btn-success').addClass('edit-btn btn-primary');
                        row.removeClass('editing'); // Remove the editing state
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error saving data for volunteer ID:', volunteerid, textStatus, errorThrown);
                        alert('Error saving data. Please try again.');
                    },
                });
            }
        });
    });
    </script>
    
        

    <script>
        // Event Listener for Email Links to populate the modal
// Event Listener for Email Links to populate the modal
document.querySelectorAll('.email-link').forEach(link => {
    link.addEventListener('click', function () {
        const email = this.getAttribute('data-email'); // Get email
        const name = this.getAttribute('data-name');   // Get name
        
        // Update modal fields
        document.getElementById('recipientEmail').value = email; // Populate email field
        document.getElementById('emailModalLabel').textContent = `Send Email to ${name}`; // Update modal title
    });
});
    
        // Event Listener for Send Email Button
        document.getElementById('sendEmailButton').addEventListener('click', async () => {
            const email = document.getElementById('recipientEmail').value;
            const subject = document.getElementById('emailSubject').value;
            const message = document.getElementById('emailMessage').value;
    
            if (!subject || !message) {
                alert('Please fill in both the subject and message.');
                return;
            }
    
            try {
                const response = await fetch('/sendEmail', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email, subject, message }),
                });
    
                if (response.ok) {
                    alert('Email sent successfully!');
                    $('#emailModal').modal('hide');
                    document.getElementById('emailSubject').value = ''; // Clear subject input
                    document.getElementById('emailMessage').value = ''; // Clear message input
                } else {
                    const error = await response.json();
                    alert('Error: ${error.error}');
                }
            } catch (error) {
                console.error('Error sending email:', error);
                alert('An error occurred while sending the email.');
            }
        });
    
        // Reset form on modal close
        $('#emailModal').on('hidden.bs.modal', () => {
            document.getElementById('emailSubject').value = '';
            document.getElementById('emailMessage').value = '';
        });
    </script>
    
    
</body>
</html>